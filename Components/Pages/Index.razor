@page "/"

@rendermode InteractiveServer

@inject TabService tabService
@inject TaskService taskService

<!-- Header -->
<ControlHeader OnScreenChange="SetScreen" OnDarkModeToggle="ToggleDarkMode" OnActiveTabChange="SetCurrentTab" />

<!-- Screens -->
@switch(CurrentScreen){
    case "Task list":
        <TaskList CurrentTabId="@CurrentTabId" StateHasChanged="@taskListStateHasChanged" />
        break;

    case "Kanban":
        <Kanban CurrentTabId="@CurrentTabId" />
        break;

    default:
        <Dashboard CurrentTabId="@CurrentTabId" />
        break;
}

@code {
    private Guid CurrentTabId { get; set; }

    private string CurrentScreen { get; set; }
    private bool IsDarkMode { get; set; }

    private bool taskListStateHasChanged;

    private void OnSubmitClicked(){
        taskListStateHasChanged = true;
    }

    private void SetCurrentTab(Guid currentTabId){
        CurrentTabId = currentTabId;
        StateHasChanged();
    }

    private void SetScreen(string newScreen)
    {
        CurrentScreen = newScreen;
        StateHasChanged();
    }

    private void ToggleDarkMode(bool isDarkMode)
    {
        IsDarkMode = isDarkMode;
        StateHasChanged();
    }
}
