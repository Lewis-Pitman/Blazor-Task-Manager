@inject TaskService taskService
@rendermode InteractiveServer

@if (isEditing)
{
    <EditForm Model="@taskItem" OnValidSubmit="HandleSubmit">
        <input type="text" placeholder="title" @bind-value="@taskItem.Title"/>
        <input type="text" placeholder="description" @bind-value="@taskItem.Description"/>
        <input type="text" placeholder="status" @bind-value="@taskItem.Status"/>
        <button type="submit">Submit</button>
    </EditForm>
}
else
{
    <p>Title: @taskItem.Title, Description: @taskItem.Description, Status: @taskItem.Status, Due: @taskItem.DueDate</p>
    <br />
    <p>Edit:</p>
}

<button @onclick="Close">Close</button>


@code {
    [Parameter]
    public EventCallback OnSubmitClicked { get; set; }

    [CascadingParameter]
    private BlazoredModalInstance Modal { get; set; }

    [Parameter]
    public TaskItem taskItem { get; set; }

    private bool isEditing = false;

    public void HandleSubmit()
    {
        taskService.EditTask(taskItem.Id, taskItem);

        OnSubmitClicked.InvokeAsync();
    }

    private void Close()
    {
        Modal.CloseAsync();
    }
}